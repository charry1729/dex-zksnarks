import "./decodeOrderBitwise.code"


def tupleForTokensWithValue(value):
  return value, value, value

def tupleForTokenPairsWithValue(value):
  return value, value, value, value, value, value

def findPairInTokenPairList(pairToken0Token1, pairToken0Token2, pairToken1Token0, pairToken1Token2, pairToken2Token0, pairToken2Token1, sourceToken, targetToken):
  pair = 0
  pair = if sourceToken == 0 then if targetToken == 1 then pairToken0Token1 else pair fi else pair fi
  pair = if sourceToken == 0 then if targetToken == 2 then pairToken0Token2 else pair fi else pair fi
  pair = if sourceToken == 1 then if targetToken == 0 then pairToken1Token0 else pair fi else pair fi
  pair = if sourceToken == 1 then if targetToken == 2 then pairToken1Token2 else pair fi else pair fi
  pair = if sourceToken == 2 then if targetToken == 0 then pairToken2Token0 else pair fi else pair fi
  pair = if sourceToken == 2 then if targetToken == 1 then pairToken2Token1 else pair fi else pair fi
  return pair

def priceFromTo(sourceToken, targetToken, priceToken1, priceToken2):
  refTokenPriceToUtxo = if sourceToken == 0 then 1000000000000000000 else 0 fi
  refTokenPriceToUtxo = refTokenPriceToUtxo + if sourceToken == 1 then priceToken1 else 0 fi
  refTokenPriceToUtxo = refTokenPriceToUtxo + if sourceToken == 2 then priceToken2 else 0 fi

  refTokenPriceToTarget = if targetToken == 0 then 1000000000000000000 else 0 fi
  refTokenPriceToTarget = refTokenPriceToTarget + if targetToken == 1 then priceToken1 else 0 fi
  refTokenPriceToTarget = refTokenPriceToTarget + if targetToken == 2 then priceToken2 else 0 fi

  return 1000000000000000000 * (refTokenPriceToTarget/refTokenPriceToUtxo)

def limitLessThanPrice(sourceToken, targetToken, limit, priceToken1, priceToken2):
  // Assuming limit is in sourceToken->targetToken and price_i in refToken->token_i
  // Because of arbitrage freeness the following statement should hold:
  // sourceToken->targetToken = sourceToken->refToken * refToken->targetToken = refToken->targetToken / refToken->sourceToken
  // Therefore we have to check that:
  // limit <= refToken->targetToken / refToken->sourceToken <==> refToken->targetToken / refToken->sourceToken > limit
  limitIsLessOrEqual = if priceFromTo(sourceToken, targetToken, priceToken1, priceToken2) < limit then 0 else 1 fi
  return limitIsLessOrEqual

def addSellVolumesForOrder(sellVolumeToken1, sellVolumeToken2, sellVolumeToken3, sourceToken, volume):
  updatedVolumeToken1 = sellVolumeToken1 + if sourceToken == 0 then volume else 0 fi
  updatedVolumeToken2 = sellVolumeToken2 + if sourceToken == 1 then volume else 0 fi
  updatedVolumeToken3 = sellVolumeToken3 + if sourceToken == 2 then volume else 0 fi
  return updatedVolumeToken1, updatedVolumeToken2, updatedVolumeToken3

def addBuyVolumesForOrder(buyVolumeToken1, buyVolumeToken2, buyVolumeToken3, sourceToken, volume, targetToken, priceToken1, priceToken2):
  buyVolume = volume * priceFromTo(sourceToken, targetToken, priceToken1, priceToken2) / 1000000000000000000 
  txBuyVolumeToken1 = buyVolumeToken1 + if targetToken == 0 then buyVolume else 0 fi
  txBuyVolumeToken2 = buyVolumeToken2 + if targetToken == 1 then buyVolume else 0 fi
  txBuyVolumeToken3 = buyVolumeToken3 + if targetToken == 2 then buyVolume else 0 fi
  return txBuyVolumeToken1, txBuyVolumeToken2, txBuyVolumeToken3

def updateHighestTouchedOrder(highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1, sourceToken, targetToken, limit, volume):

  highestTouchedOrder = findPairInTokenPairList(highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1, sourceToken, targetToken)

  shouldUpdate = if 0 < volume then 1 else 0 fi
  shouldUpdate = if highestTouchedOrder < limit then shouldUpdate else 0 fi

  highestTouchedOrderToken0Token1 = if shouldUpdate == 1 then if sourceToken == 0 then if targetToken == 1 then limit else highestTouchedOrderToken0Token1 fi else highestTouchedOrderToken0Token1 fi else highestTouchedOrderToken0Token1 fi
  highestTouchedOrderToken0Token2 = if shouldUpdate == 1 then if sourceToken == 0 then if targetToken == 2 then limit else highestTouchedOrderToken0Token2 fi else highestTouchedOrderToken0Token2 fi else highestTouchedOrderToken0Token2 fi
  highestTouchedOrderToken1Token0 = if shouldUpdate == 1 then if sourceToken == 1 then if targetToken == 0 then limit else highestTouchedOrderToken1Token0 fi else highestTouchedOrderToken1Token0 fi else highestTouchedOrderToken1Token0 fi
  highestTouchedOrderToken1Token2 = if shouldUpdate == 1 then if sourceToken == 1 then if targetToken == 2 then limit else highestTouchedOrderToken1Token2 fi else highestTouchedOrderToken1Token2 fi else highestTouchedOrderToken1Token2 fi
  highestTouchedOrderToken2Token0 = if shouldUpdate == 1 then if sourceToken == 2 then if targetToken == 0 then limit else highestTouchedOrderToken2Token0 fi else highestTouchedOrderToken2Token0 fi else highestTouchedOrderToken2Token0 fi
  highestTouchedOrderToken2Token1 = if shouldUpdate == 1 then if sourceToken == 2 then if targetToken == 1 then limit else highestTouchedOrderToken2Token1 fi else highestTouchedOrderToken2Token1 fi else highestTouchedOrderToken2Token1 fi

  return highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1

def verifyCompletelyFulfilledIfLimitLowerHighestTouchedOrder(highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1, sourceAmount, sourceToken, targetToken, limit, volume):

  highestTouchedOrder = findPairInTokenPairList(highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1, sourceToken, targetToken)

  valid = if limit < highestTouchedOrder then 1 - (sourceAmount - volume) else 1 fi
  return valid

def checkConstraints(amount1, sourceToken1, targetToken1, limit1, amount2, sourceToken2, targetToken2, limit2, amount3, sourceToken3, targetToken3, limit3, volume1, volume2, volume3, priceToken1, priceToken2):
  // volumes are not larger than in original offer
  valid = if amount1 < volume1 then 0 else 1 fi
  valid == 1
  valid = if amount2 < volume2 then 0 else 1 fi
  valid == 1
  valid = if amount3 < volume3 then 0 else 1 fi
  valid == 1

  // orders are only touched, if the limit price is below the calculated price:
  valid = if volume1 == 0 then 1 else limitLessThanPrice(sourceToken1, targetToken1, limit1, priceToken1, priceToken2) fi
  valid == 1
  valid = if volume2 == 0 then 1 else limitLessThanPrice(sourceToken2, targetToken2, limit2, priceToken1, priceToken2) fi
  valid == 1
  valid = if volume3 == 0 then 1 else limitLessThanPrice(sourceToken3, targetToken3, limit3, priceToken1, priceToken2) fi
  valid == 1

  // the amount of sell volume for a token equals its buy volume:
  buyVolumeToken1, buyVolumeToken2, buyVolumeToken3 = tupleForTokensWithValue(0)
  sellVolumeToken1, sellVolumeToken2, sellVolumeToken3 = tupleForTokensWithValue(0)

  buyVolumeToken1, buyVolumeToken2, buyVolumeToken3 = addBuyVolumesForOrder(buyVolumeToken1, buyVolumeToken2, buyVolumeToken3, sourceToken1, volume1, targetToken1, priceToken1, priceToken2)
  sellVolumeToken1, sellVolumeToken2, sellVolumeToken3 = addSellVolumesForOrder(sellVolumeToken1, sellVolumeToken2, sellVolumeToken3, sourceToken1, volume1)

  buyVolumeToken1, buyVolumeToken2, buyVolumeToken3 = addBuyVolumesForOrder(buyVolumeToken1, buyVolumeToken2, buyVolumeToken3, sourceToken2, volume2, targetToken2, priceToken1, priceToken2)
  sellVolumeToken1, sellVolumeToken2, sellVolumeToken3 = addSellVolumesForOrder(sellVolumeToken1, sellVolumeToken2, sellVolumeToken3, sourceToken2, volume2)

  buyVolumeToken1, buyVolumeToken2, buyVolumeToken3 = addBuyVolumesForOrder(buyVolumeToken1, buyVolumeToken2, buyVolumeToken3, sourceToken3, volume3, targetToken3, priceToken1, priceToken2)
  sellVolumeToken1, sellVolumeToken2, sellVolumeToken3 = addSellVolumesForOrder(sellVolumeToken1, sellVolumeToken2, sellVolumeToken3, sourceToken3, volume3)

  buyVolumeToken1 == sellVolumeToken1
  buyVolumeToken2 == sellVolumeToken2
  buyVolumeToken3 == sellVolumeToken3

  // If an order σ ∈ Oi→j with a limit price p has a positive trading volume, then every order in Oi→j with a lower limit price should be completely fulfilled.
  highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1 = tupleForTokenPairsWithValue(0)
  highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1 = updateHighestTouchedOrder(highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1, sourceToken1, targetToken1, limit1, volume1)
  highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1 = updateHighestTouchedOrder(highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1, sourceToken2, targetToken2, limit2, volume2)
  highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1 = updateHighestTouchedOrder(highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1, sourceToken3, targetToken3, limit3, volume3)

  valid = verifyCompletelyFulfilledIfLimitLowerHighestTouchedOrder(highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1, amount1, sourceToken1, targetToken1, limit1, volume1)
  valid == 1
  valid = verifyCompletelyFulfilledIfLimitLowerHighestTouchedOrder(highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1, amount2, sourceToken2, targetToken2, limit2, volume2)
  valid == 1
  valid = verifyCompletelyFulfilledIfLimitLowerHighestTouchedOrder(highestTouchedOrderToken0Token1, highestTouchedOrderToken0Token2, highestTouchedOrderToken1Token0, highestTouchedOrderToken1Token2, highestTouchedOrderToken2Token0, highestTouchedOrderToken2Token1, amount3, sourceToken3, targetToken3, limit3, volume3)
  valid == 1

  return 1 // Could return total volume to maximize for

def main(order1Bit0, order1Bit1, order1Bit2, order1Bit3, order1Bit4, order1Bit5, order1Bit6, order1Bit7, order1Bit8, order1Bit9, order1Bit10, order1Bit11, order1Bit12, order1Bit13, order1Bit14, order1Bit15, order1Bit16, order1Bit17, order1Bit18, order1Bit19, order1Bit20, order1Bit21, order1Bit22, order1Bit23, order1Bit24, order1Bit25, order1Bit26, order1Bit27, order1Bit28, order1Bit29, order1Bit30, order1Bit31, order1Bit32, order1Bit33, order1Bit34, order1Bit35, order1Bit36, order1Bit37, order1Bit38, order1Bit39, order1Bit40, order1Bit41, order1Bit42, order1Bit43, order1Bit44, order1Bit45, order1Bit46, order1Bit47, order1Bit48, order1Bit49, order1Bit50, order1Bit51, order1Bit52, order1Bit53, order1Bit54, order1Bit55, order1Bit56, order1Bit57, order1Bit58, order1Bit59, order1Bit60, order1Bit61, order1Bit62, order1Bit63, order1Bit64, order1Bit65, order1Bit66, order1Bit67, order1Bit68, order1Bit69, order1Bit70, order1Bit71, order1Bit72, order1Bit73, order1Bit74, order1Bit75, order1Bit76, order1Bit77, order1Bit78, order1Bit79, order1Bit80, order1Bit81, order1Bit82, order1Bit83, order1Bit84, order1Bit85, order1Bit86, order1Bit87, order1Bit88, order1Bit89, order1Bit90, order1Bit91, order1Bit92, order1Bit93, order1Bit94, order1Bit95, order1Bit96, order1Bit97, order1Bit98, order1Bit99, order1Bit100, order1Bit101, order1Bit102, order1Bit103, order1Bit104, order1Bit105, order1Bit106, order1Bit107, order1Bit108, order1Bit109, order1Bit110, order1Bit111, order1Bit112, order1Bit113, order1Bit114, order1Bit115, order1Bit116, order1Bit117, order1Bit118, order1Bit119, order1Bit120, order1Bit121, order1Bit122, order1Bit123, order1Bit124, order1Bit125, order1Bit126, order1Bit127, order1Bit128, order1Bit129, order1Bit130, order1Bit131, order1Bit132, order1Bit133, order1Bit134, order1Bit135, order1Bit136, order1Bit137, order1Bit138, order1Bit139, order1Bit140, order1Bit141, order1Bit142, order1Bit143, order1Bit144, order1Bit145, order1Bit146, order1Bit147, order1Bit148, order1Bit149, order1Bit150, order1Bit151, order1Bit152, order1Bit153, order1Bit154, order1Bit155, order1Bit156, order1Bit157, order1Bit158, order1Bit159, order1Bit160, order1Bit161, order1Bit162, order1Bit163, order1Bit164, order1Bit165, order1Bit166, order1Bit167, order1Bit168, order1Bit169, order1Bit170, order1Bit171, order1Bit172, order1Bit173, order1Bit174, order1Bit175, order1Bit176, order1Bit177, order1Bit178, order1Bit179, order1Bit180, order1Bit181, order1Bit182, order1Bit183, order1Bit184, order1Bit185, order1Bit186, order1Bit187, order1Bit188, order1Bit189, order1Bit190, order1Bit191, order1Bit192, order1Bit193, order1Bit194, order1Bit195, order1Bit196, order1Bit197, order1Bit198, order1Bit199, order1Bit200, order1Bit201, order1Bit202, order1Bit203, order1Bit204, order1Bit205, order1Bit206, order1Bit207, order1Bit208, order1Bit209, order1Bit210, order1Bit211, order1Bit212, order1Bit213, order1Bit214, order1Bit215, order1Bit216, order1Bit217, order1Bit218, order1Bit219, order1Bit220, order1Bit221, order1Bit222, order1Bit223, order1Bit224, order1Bit225, order1Bit226, order1Bit227, order1Bit228, order1Bit229, order1Bit230, order1Bit231, order1Bit232, order1Bit233, order1Bit234, order1Bit235, order1Bit236, order1Bit237, order1Bit238, order1Bit239, order1Bit240, order1Bit241, order1Bit242, order1Bit243, order1Bit244, order1Bit245, order1Bit246, order1Bit247, order1Bit248, order1Bit249, order1Bit250, order1Bit251, order1Bit252, order2Bit0, order2Bit1, order2Bit2, order2Bit3, order2Bit4, order2Bit5, order2Bit6, order2Bit7, order2Bit8, order2Bit9, order2Bit10, order2Bit11, order2Bit12, order2Bit13, order2Bit14, order2Bit15, order2Bit16, order2Bit17, order2Bit18, order2Bit19, order2Bit20, order2Bit21, order2Bit22, order2Bit23, order2Bit24, order2Bit25, order2Bit26, order2Bit27, order2Bit28, order2Bit29, order2Bit30, order2Bit31, order2Bit32, order2Bit33, order2Bit34, order2Bit35, order2Bit36, order2Bit37, order2Bit38, order2Bit39, order2Bit40, order2Bit41, order2Bit42, order2Bit43, order2Bit44, order2Bit45, order2Bit46, order2Bit47, order2Bit48, order2Bit49, order2Bit50, order2Bit51, order2Bit52, order2Bit53, order2Bit54, order2Bit55, order2Bit56, order2Bit57, order2Bit58, order2Bit59, order2Bit60, order2Bit61, order2Bit62, order2Bit63, order2Bit64, order2Bit65, order2Bit66, order2Bit67, order2Bit68, order2Bit69, order2Bit70, order2Bit71, order2Bit72, order2Bit73, order2Bit74, order2Bit75, order2Bit76, order2Bit77, order2Bit78, order2Bit79, order2Bit80, order2Bit81, order2Bit82, order2Bit83, order2Bit84, order2Bit85, order2Bit86, order2Bit87, order2Bit88, order2Bit89, order2Bit90, order2Bit91, order2Bit92, order2Bit93, order2Bit94, order2Bit95, order2Bit96, order2Bit97, order2Bit98, order2Bit99, order2Bit100, order2Bit101, order2Bit102, order2Bit103, order2Bit104, order2Bit105, order2Bit106, order2Bit107, order2Bit108, order2Bit109, order2Bit110, order2Bit111, order2Bit112, order2Bit113, order2Bit114, order2Bit115, order2Bit116, order2Bit117, order2Bit118, order2Bit119, order2Bit120, order2Bit121, order2Bit122, order2Bit123, order2Bit124, order2Bit125, order2Bit126, order2Bit127, order2Bit128, order2Bit129, order2Bit130, order2Bit131, order2Bit132, order2Bit133, order2Bit134, order2Bit135, order2Bit136, order2Bit137, order2Bit138, order2Bit139, order2Bit140, order2Bit141, order2Bit142, order2Bit143, order2Bit144, order2Bit145, order2Bit146, order2Bit147, order2Bit148, order2Bit149, order2Bit150, order2Bit151, order2Bit152, order2Bit153, order2Bit154, order2Bit155, order2Bit156, order2Bit157, order2Bit158, order2Bit159, order2Bit160, order2Bit161, order2Bit162, order2Bit163, order2Bit164, order2Bit165, order2Bit166, order2Bit167, order2Bit168, order2Bit169, order2Bit170, order2Bit171, order2Bit172, order2Bit173, order2Bit174, order2Bit175, order2Bit176, order2Bit177, order2Bit178, order2Bit179, order2Bit180, order2Bit181, order2Bit182, order2Bit183, order2Bit184, order2Bit185, order2Bit186, order2Bit187, order2Bit188, order2Bit189, order2Bit190, order2Bit191, order2Bit192, order2Bit193, order2Bit194, order2Bit195, order2Bit196, order2Bit197, order2Bit198, order2Bit199, order2Bit200, order2Bit201, order2Bit202, order2Bit203, order2Bit204, order2Bit205, order2Bit206, order2Bit207, order2Bit208, order2Bit209, order2Bit210, order2Bit211, order2Bit212, order2Bit213, order2Bit214, order2Bit215, order2Bit216, order2Bit217, order2Bit218, order2Bit219, order2Bit220, order2Bit221, order2Bit222, order2Bit223, order2Bit224, order2Bit225, order2Bit226, order2Bit227, order2Bit228, order2Bit229, order2Bit230, order2Bit231, order2Bit232, order2Bit233, order2Bit234, order2Bit235, order2Bit236, order2Bit237, order2Bit238, order2Bit239, order2Bit240, order2Bit241, order2Bit242, order2Bit243, order2Bit244, order2Bit245, order2Bit246, order2Bit247, order2Bit248, order2Bit249, order2Bit250, order2Bit251, order2Bit252, order3Bit0, order3Bit1, order3Bit2, order3Bit3, order3Bit4, order3Bit5, order3Bit6, order3Bit7, order3Bit8, order3Bit9, order3Bit10, order3Bit11, order3Bit12, order3Bit13, order3Bit14, order3Bit15, order3Bit16, order3Bit17, order3Bit18, order3Bit19, order3Bit20, order3Bit21, order3Bit22, order3Bit23, order3Bit24, order3Bit25, order3Bit26, order3Bit27, order3Bit28, order3Bit29, order3Bit30, order3Bit31, order3Bit32, order3Bit33, order3Bit34, order3Bit35, order3Bit36, order3Bit37, order3Bit38, order3Bit39, order3Bit40, order3Bit41, order3Bit42, order3Bit43, order3Bit44, order3Bit45, order3Bit46, order3Bit47, order3Bit48, order3Bit49, order3Bit50, order3Bit51, order3Bit52, order3Bit53, order3Bit54, order3Bit55, order3Bit56, order3Bit57, order3Bit58, order3Bit59, order3Bit60, order3Bit61, order3Bit62, order3Bit63, order3Bit64, order3Bit65, order3Bit66, order3Bit67, order3Bit68, order3Bit69, order3Bit70, order3Bit71, order3Bit72, order3Bit73, order3Bit74, order3Bit75, order3Bit76, order3Bit77, order3Bit78, order3Bit79, order3Bit80, order3Bit81, order3Bit82, order3Bit83, order3Bit84, order3Bit85, order3Bit86, order3Bit87, order3Bit88, order3Bit89, order3Bit90, order3Bit91, order3Bit92, order3Bit93, order3Bit94, order3Bit95, order3Bit96, order3Bit97, order3Bit98, order3Bit99, order3Bit100, order3Bit101, order3Bit102, order3Bit103, order3Bit104, order3Bit105, order3Bit106, order3Bit107, order3Bit108, order3Bit109, order3Bit110, order3Bit111, order3Bit112, order3Bit113, order3Bit114, order3Bit115, order3Bit116, order3Bit117, order3Bit118, order3Bit119, order3Bit120, order3Bit121, order3Bit122, order3Bit123, order3Bit124, order3Bit125, order3Bit126, order3Bit127, order3Bit128, order3Bit129, order3Bit130, order3Bit131, order3Bit132, order3Bit133, order3Bit134, order3Bit135, order3Bit136, order3Bit137, order3Bit138, order3Bit139, order3Bit140, order3Bit141, order3Bit142, order3Bit143, order3Bit144, order3Bit145, order3Bit146, order3Bit147, order3Bit148, order3Bit149, order3Bit150, order3Bit151, order3Bit152, order3Bit153, order3Bit154, order3Bit155, order3Bit156, order3Bit157, order3Bit158, order3Bit159, order3Bit160, order3Bit161, order3Bit162, order3Bit163, order3Bit164, order3Bit165, order3Bit166, order3Bit167, order3Bit168, order3Bit169, order3Bit170, order3Bit171, order3Bit172, order3Bit173, order3Bit174, order3Bit175, order3Bit176, order3Bit177, order3Bit178, order3Bit179, order3Bit180, order3Bit181, order3Bit182, order3Bit183, order3Bit184, order3Bit185, order3Bit186, order3Bit187, order3Bit188, order3Bit189, order3Bit190, order3Bit191, order3Bit192, order3Bit193, order3Bit194, order3Bit195, order3Bit196, order3Bit197, order3Bit198, order3Bit199, order3Bit200, order3Bit201, order3Bit202, order3Bit203, order3Bit204, order3Bit205, order3Bit206, order3Bit207, order3Bit208, order3Bit209, order3Bit210, order3Bit211, order3Bit212, order3Bit213, order3Bit214, order3Bit215, order3Bit216, order3Bit217, order3Bit218, order3Bit219, order3Bit220, order3Bit221, order3Bit222, order3Bit223, order3Bit224, order3Bit225, order3Bit226, order3Bit227, order3Bit228, order3Bit229, order3Bit230, order3Bit231, order3Bit232, order3Bit233, order3Bit234, order3Bit235, order3Bit236, order3Bit237, order3Bit238, order3Bit239, order3Bit240, order3Bit241, order3Bit242, order3Bit243, order3Bit244, order3Bit245, order3Bit246, order3Bit247, order3Bit248, order3Bit249, order3Bit250, order3Bit251, order3Bit252, bitmapOrder1, bitmapOrder2, bitmapOrder3, volume1, volume2, volume3, priceToken1, priceToken2):
  // Decode orders
  amount1, sourceToken1, targetToken1, limit1 = decodeOrderBitwise(order1Bit0, order1Bit1, order1Bit2, order1Bit3, order1Bit4, order1Bit5, order1Bit6, order1Bit7, order1Bit8, order1Bit9, order1Bit10, order1Bit11, order1Bit12, order1Bit13, order1Bit14, order1Bit15, order1Bit16, order1Bit17, order1Bit18, order1Bit19, order1Bit20, order1Bit21, order1Bit22, order1Bit23, order1Bit24, order1Bit25, order1Bit26, order1Bit27, order1Bit28, order1Bit29, order1Bit30, order1Bit31, order1Bit32, order1Bit33, order1Bit34, order1Bit35, order1Bit36, order1Bit37, order1Bit38, order1Bit39, order1Bit40, order1Bit41, order1Bit42, order1Bit43, order1Bit44, order1Bit45, order1Bit46, order1Bit47, order1Bit48, order1Bit49, order1Bit50, order1Bit51, order1Bit52, order1Bit53, order1Bit54, order1Bit55, order1Bit56, order1Bit57, order1Bit58, order1Bit59, order1Bit60, order1Bit61, order1Bit62, order1Bit63, order1Bit64, order1Bit65, order1Bit66, order1Bit67, order1Bit68, order1Bit69, order1Bit70, order1Bit71, order1Bit72, order1Bit73, order1Bit74, order1Bit75, order1Bit76, order1Bit77, order1Bit78, order1Bit79, order1Bit80, order1Bit81, order1Bit82, order1Bit83, order1Bit84, order1Bit85, order1Bit86, order1Bit87, order1Bit88, order1Bit89, order1Bit90, order1Bit91, order1Bit92, order1Bit93, order1Bit94, order1Bit95, order1Bit96, order1Bit97, order1Bit98, order1Bit99, order1Bit100, order1Bit101, order1Bit102, order1Bit103, order1Bit104, order1Bit105, order1Bit106, order1Bit107, order1Bit108, order1Bit109, order1Bit110, order1Bit111, order1Bit112, order1Bit113, order1Bit114, order1Bit115, order1Bit116, order1Bit117, order1Bit118, order1Bit119, order1Bit120, order1Bit121, order1Bit122, order1Bit123, order1Bit124, order1Bit125, order1Bit126, order1Bit127, order1Bit128, order1Bit129, order1Bit130, order1Bit131, order1Bit132, order1Bit133, order1Bit134, order1Bit135, order1Bit136, order1Bit137, order1Bit138, order1Bit139, order1Bit140, order1Bit141, order1Bit142, order1Bit143, order1Bit144, order1Bit145, order1Bit146, order1Bit147, order1Bit148, order1Bit149, order1Bit150, order1Bit151, order1Bit152, order1Bit153, order1Bit154, order1Bit155, order1Bit156, order1Bit157, order1Bit158, order1Bit159, order1Bit160, order1Bit161, order1Bit162, order1Bit163, order1Bit164, order1Bit165, order1Bit166, order1Bit167, order1Bit168, order1Bit169, order1Bit170, order1Bit171, order1Bit172, order1Bit173, order1Bit174, order1Bit175, order1Bit176, order1Bit177, order1Bit178, order1Bit179, order1Bit180, order1Bit181, order1Bit182, order1Bit183, order1Bit184, order1Bit185, order1Bit186, order1Bit187, order1Bit188, order1Bit189, order1Bit190, order1Bit191, order1Bit192, order1Bit193, order1Bit194, order1Bit195, order1Bit196, order1Bit197, order1Bit198, order1Bit199, order1Bit200, order1Bit201, order1Bit202, order1Bit203, order1Bit204, order1Bit205, order1Bit206, order1Bit207, order1Bit208, order1Bit209, order1Bit210, order1Bit211, order1Bit212, order1Bit213, order1Bit214, order1Bit215, order1Bit216, order1Bit217, order1Bit218, order1Bit219, order1Bit220, order1Bit221, order1Bit222, order1Bit223, order1Bit224, order1Bit225, order1Bit226, order1Bit227, order1Bit228, order1Bit229, order1Bit230, order1Bit231, order1Bit232, order1Bit233, order1Bit234, order1Bit235, order1Bit236, order1Bit237, order1Bit238, order1Bit239, order1Bit240, order1Bit241, order1Bit242, order1Bit243, order1Bit244, order1Bit245, order1Bit246, order1Bit247, order1Bit248, order1Bit249, order1Bit250, order1Bit251, order1Bit252)
  amount2, sourceToken2, targetToken2, limit2 = decodeOrderBitwise(order2Bit0, order2Bit1, order2Bit2, order2Bit3, order2Bit4, order2Bit5, order2Bit6, order2Bit7, order2Bit8, order2Bit9, order2Bit10, order2Bit11, order2Bit12, order2Bit13, order2Bit14, order2Bit15, order2Bit16, order2Bit17, order2Bit18, order2Bit19, order2Bit20, order2Bit21, order2Bit22, order2Bit23, order2Bit24, order2Bit25, order2Bit26, order2Bit27, order2Bit28, order2Bit29, order2Bit30, order2Bit31, order2Bit32, order2Bit33, order2Bit34, order2Bit35, order2Bit36, order2Bit37, order2Bit38, order2Bit39, order2Bit40, order2Bit41, order2Bit42, order2Bit43, order2Bit44, order2Bit45, order2Bit46, order2Bit47, order2Bit48, order2Bit49, order2Bit50, order2Bit51, order2Bit52, order2Bit53, order2Bit54, order2Bit55, order2Bit56, order2Bit57, order2Bit58, order2Bit59, order2Bit60, order2Bit61, order2Bit62, order2Bit63, order2Bit64, order2Bit65, order2Bit66, order2Bit67, order2Bit68, order2Bit69, order2Bit70, order2Bit71, order2Bit72, order2Bit73, order2Bit74, order2Bit75, order2Bit76, order2Bit77, order2Bit78, order2Bit79, order2Bit80, order2Bit81, order2Bit82, order2Bit83, order2Bit84, order2Bit85, order2Bit86, order2Bit87, order2Bit88, order2Bit89, order2Bit90, order2Bit91, order2Bit92, order2Bit93, order2Bit94, order2Bit95, order2Bit96, order2Bit97, order2Bit98, order2Bit99, order2Bit100, order2Bit101, order2Bit102, order2Bit103, order2Bit104, order2Bit105, order2Bit106, order2Bit107, order2Bit108, order2Bit109, order2Bit110, order2Bit111, order2Bit112, order2Bit113, order2Bit114, order2Bit115, order2Bit116, order2Bit117, order2Bit118, order2Bit119, order2Bit120, order2Bit121, order2Bit122, order2Bit123, order2Bit124, order2Bit125, order2Bit126, order2Bit127, order2Bit128, order2Bit129, order2Bit130, order2Bit131, order2Bit132, order2Bit133, order2Bit134, order2Bit135, order2Bit136, order2Bit137, order2Bit138, order2Bit139, order2Bit140, order2Bit141, order2Bit142, order2Bit143, order2Bit144, order2Bit145, order2Bit146, order2Bit147, order2Bit148, order2Bit149, order2Bit150, order2Bit151, order2Bit152, order2Bit153, order2Bit154, order2Bit155, order2Bit156, order2Bit157, order2Bit158, order2Bit159, order2Bit160, order2Bit161, order2Bit162, order2Bit163, order2Bit164, order2Bit165, order2Bit166, order2Bit167, order2Bit168, order2Bit169, order2Bit170, order2Bit171, order2Bit172, order2Bit173, order2Bit174, order2Bit175, order2Bit176, order2Bit177, order2Bit178, order2Bit179, order2Bit180, order2Bit181, order2Bit182, order2Bit183, order2Bit184, order2Bit185, order2Bit186, order2Bit187, order2Bit188, order2Bit189, order2Bit190, order2Bit191, order2Bit192, order2Bit193, order2Bit194, order2Bit195, order2Bit196, order2Bit197, order2Bit198, order2Bit199, order2Bit200, order2Bit201, order2Bit202, order2Bit203, order2Bit204, order2Bit205, order2Bit206, order2Bit207, order2Bit208, order2Bit209, order2Bit210, order2Bit211, order2Bit212, order2Bit213, order2Bit214, order2Bit215, order2Bit216, order2Bit217, order2Bit218, order2Bit219, order2Bit220, order2Bit221, order2Bit222, order2Bit223, order2Bit224, order2Bit225, order2Bit226, order2Bit227, order2Bit228, order2Bit229, order2Bit230, order2Bit231, order2Bit232, order2Bit233, order2Bit234, order2Bit235, order2Bit236, order2Bit237, order2Bit238, order2Bit239, order2Bit240, order2Bit241, order2Bit242, order2Bit243, order2Bit244, order2Bit245, order2Bit246, order2Bit247, order2Bit248, order2Bit249, order2Bit250, order2Bit251, order2Bit252)
  amount3, sourceToken3, targetToken3, limit3 = decodeOrderBitwise(order3Bit0, order3Bit1, order3Bit2, order3Bit3, order3Bit4, order3Bit5, order3Bit6, order3Bit7, order3Bit8, order3Bit9, order3Bit10, order3Bit11, order3Bit12, order3Bit13, order3Bit14, order3Bit15, order3Bit16, order3Bit17, order3Bit18, order3Bit19, order3Bit20, order3Bit21, order3Bit22, order3Bit23, order3Bit24, order3Bit25, order3Bit26, order3Bit27, order3Bit28, order3Bit29, order3Bit30, order3Bit31, order3Bit32, order3Bit33, order3Bit34, order3Bit35, order3Bit36, order3Bit37, order3Bit38, order3Bit39, order3Bit40, order3Bit41, order3Bit42, order3Bit43, order3Bit44, order3Bit45, order3Bit46, order3Bit47, order3Bit48, order3Bit49, order3Bit50, order3Bit51, order3Bit52, order3Bit53, order3Bit54, order3Bit55, order3Bit56, order3Bit57, order3Bit58, order3Bit59, order3Bit60, order3Bit61, order3Bit62, order3Bit63, order3Bit64, order3Bit65, order3Bit66, order3Bit67, order3Bit68, order3Bit69, order3Bit70, order3Bit71, order3Bit72, order3Bit73, order3Bit74, order3Bit75, order3Bit76, order3Bit77, order3Bit78, order3Bit79, order3Bit80, order3Bit81, order3Bit82, order3Bit83, order3Bit84, order3Bit85, order3Bit86, order3Bit87, order3Bit88, order3Bit89, order3Bit90, order3Bit91, order3Bit92, order3Bit93, order3Bit94, order3Bit95, order3Bit96, order3Bit97, order3Bit98, order3Bit99, order3Bit100, order3Bit101, order3Bit102, order3Bit103, order3Bit104, order3Bit105, order3Bit106, order3Bit107, order3Bit108, order3Bit109, order3Bit110, order3Bit111, order3Bit112, order3Bit113, order3Bit114, order3Bit115, order3Bit116, order3Bit117, order3Bit118, order3Bit119, order3Bit120, order3Bit121, order3Bit122, order3Bit123, order3Bit124, order3Bit125, order3Bit126, order3Bit127, order3Bit128, order3Bit129, order3Bit130, order3Bit131, order3Bit132, order3Bit133, order3Bit134, order3Bit135, order3Bit136, order3Bit137, order3Bit138, order3Bit139, order3Bit140, order3Bit141, order3Bit142, order3Bit143, order3Bit144, order3Bit145, order3Bit146, order3Bit147, order3Bit148, order3Bit149, order3Bit150, order3Bit151, order3Bit152, order3Bit153, order3Bit154, order3Bit155, order3Bit156, order3Bit157, order3Bit158, order3Bit159, order3Bit160, order3Bit161, order3Bit162, order3Bit163, order3Bit164, order3Bit165, order3Bit166, order3Bit167, order3Bit168, order3Bit169, order3Bit170, order3Bit171, order3Bit172, order3Bit173, order3Bit174, order3Bit175, order3Bit176, order3Bit177, order3Bit178, order3Bit179, order3Bit180, order3Bit181, order3Bit182, order3Bit183, order3Bit184, order3Bit185, order3Bit186, order3Bit187, order3Bit188, order3Bit189, order3Bit190, order3Bit191, order3Bit192, order3Bit193, order3Bit194, order3Bit195, order3Bit196, order3Bit197, order3Bit198, order3Bit199, order3Bit200, order3Bit201, order3Bit202, order3Bit203, order3Bit204, order3Bit205, order3Bit206, order3Bit207, order3Bit208, order3Bit209, order3Bit210, order3Bit211, order3Bit212, order3Bit213, order3Bit214, order3Bit215, order3Bit216, order3Bit217, order3Bit218, order3Bit219, order3Bit220, order3Bit221, order3Bit222, order3Bit223, order3Bit224, order3Bit225, order3Bit226, order3Bit227, order3Bit228, order3Bit229, order3Bit230, order3Bit231, order3Bit232, order3Bit233, order3Bit234, order3Bit235, order3Bit236, order3Bit237, order3Bit238, order3Bit239, order3Bit240, order3Bit241, order3Bit242, order3Bit243, order3Bit244, order3Bit245, order3Bit246, order3Bit247, order3Bit248, order3Bit249, order3Bit250, order3Bit251, order3Bit252)

  // check double signatures
  amount1 = if bitmapOrder1 == 1 then amount1 else 0 fi
  sourceToken1 = if bitmapOrder1 == 1 then sourceToken1 else 0 fi
  targetToken1 = if bitmapOrder1 == 1 then targetToken1 else 0 fi
  limit1 = if bitmapOrder1 == 1 then limit1 else 0 fi

  amount2 = if bitmapOrder2 == 1 then amount2 else 0 fi
  sourceToken2 = if bitmapOrder2 == 1 then sourceToken2 else 0 fi
  targetToken2 = if bitmapOrder2 == 1 then targetToken2 else 0 fi
  limit2 = if bitmapOrder2 == 1 then limit2 else 0 fi

  amount3 = if bitmapOrder3 == 1 then amount3 else 0 fi
  sourceToken3 = if bitmapOrder3 == 1 then sourceToken3 else 0 fi
  targetToken3 = if bitmapOrder3 == 1 then targetToken3 else 0 fi
  limit3 = if bitmapOrder3 == 1 then limit3 else 0 fi

  return checkConstraints(amount1, sourceToken1, targetToken1, limit1, amount2, sourceToken2, targetToken2, limit2, amount3, sourceToken3, targetToken3, limit3, volume1, volume2, volume3, priceToken1, priceToken2)
import "./popLeastSignificantBit.code"

def main(order):
  // MSB
  // Limit price (120 bits - i.e. pow(10,36) in base 2)
  // Target token (8 bits - i.e. we support 256 = 2^8 tokens)
  // Source token (8 bits)
  // Amount (120 bits)
  // LSB
  amount = 0
  exponent = 1
  for i in 0..120 do
    bit, order = popLeastSignificantBit(order)
    amount = amount + (bit * exponent)
    exponent = exponent * 2
  endfor

  sourceToken = 0
  exponent = 1
  for i in 0..5 do
    bit, order = popLeastSignificantBit(order)
    sourceToken = sourceToken + (bit * exponent)
    exponent = exponent * 2
  endfor

  targetToken = 0
  exponent = 1
  for i in 0..5 do
    bit, order = popLeastSignificantBit(order)
    targetToken = targetToken + (bit * exponent)
    exponent = exponent * 2
  endfor

  limit = 0
  exponent = 1
  for i in 0..120 do
    bit, order = popLeastSignificantBit(order)
    limit = limit + (bit * exponent)
    exponent = exponent * 2
  endfor

  return amount, sourceToken, targetToken, limit
